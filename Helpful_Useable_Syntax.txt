Hint: These functions are especially useful in the LaTeX Tab as they allow you to use it as a calculator with LaTeX output
"exp" is the expression on witch you want to use the function

(exp).doit()	# Resolve things (For Example integrals)
(exp).evalf()	# converted to floating-point approximations (decimal numbers)
solve(exp)		# solve exp for unknown variables
solve(exp,x)	# solve exp for variable x
roots(exp)		# solve exp for unknown variables and show the multiplicity of each Solution

laplace_transform(exp,x,s)[0]		# Laplace transformation of exp
inverse_laplace_transform(exp,s,x)	# inverse Laplace transformation of exp

linsolve(exp)	# If exp is a  n x n+1  Matrix than this solves the linear system of equations

pdsolve(exp)	# solve a partial differential equation

# Simplify: https://docs.sympy.org/latest/tutorial/simplification.html
simplify(exp)     # Simplifies
expand(exp)       # Solve all * and **
factor(exp)       # takes a polynomial and factors it into irreducible factors (Inverse of expand)
collect(exp,TERM)      # collects common powers of a term in an expression
cancel(exp)       # will take any rational function and put it into the standard canonical form p/q
apart(exp)        # performs a partial fraction decomposition on a rational function
expand_trig(exp)  # To expand trigonometric functions, that is, apply the sum or double angle identities
expand_log(exp)   # To expand logarithms

powsimp(exp)		# collects exponents
expand_power_exp(exp)
expand_power_base(exp)



factorint(exp)	# returns primefactors
isprime(exp)	# returns if exp is prime


(exp).rewrite( function )      # A common way to deal with special functions is to rewrite them in terms of one another. For example: tan(x).rewrite(sin)
